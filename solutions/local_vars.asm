use16								; генерированить 16-битный код(для DOS)
org 100h							; начало программы с адресса 100h
;-----------------------------------
	jmp start						; переход на метку start
;-----------------------------------
print_help db "Type a number from 0 to 255",13,10,"$"
;-----------------------------------
start:								; начало программы
	mov dx, print_help 					; dx = адресс print_help
	mov ah, 09h 						; ah = функция DOS вывода строки
	int 21h 						; вызов функции DOS
	call str_to_num 					; вызов процедуры


exit: 								; конец программы
	mov ax, 4C00h						; ah - завершение программы DOS, al - код завершения
	int 21h							; вызов функции DOS


str_to_num: 							; процедура конвертации строки в число
	push bp 						; отправка bp в стек
	mov bp, sp 						; bp = sp для работы со стеком
	sub sp, 6 						; выделение памяти в стеке для буфера

	mov byte[bp-6], 4 					; первый байт буфера = 4 - длина строки вместе с CR
	mov dx, sp 						; dx = адресс буфера
	mov ah, 0ah 						; ah = функция DOS для ввода строки
	int 21h 						; вызов функции DOS

	movzx cx, byte[bp-5] 					; cx = количеству символов без CR
	mov si, sp 						; si = sp для смещений
	xor al, al 						; очистка al для сложений
	mov bl, 10 						; bl = 10 для умножений
lp_add: 							; метка для сложений цифр
	mul bl 							; al = bl * al
	jc errors 						; переход на метку errors если флаг 'c' = 1
	mov dl, byte[si+2] 					; dl = строковое значение по адресу si+2
	cmp dl, "0" 						; проверка dl
	jl errors 						; переход на метку errors если dl < "0"
	cmp dl, "9" 						; проверка dl
	jg errors 						; переход на метку errors если dl > "9"
	sub dl, "0" 						; dl = цифра
	add al, dl 						; сложение al и dl
	jc errors 						; переход на метку errors если флаг 'c' = 1
	inc si 							; увеличиваем si на 1 для смещений
	loop lp_add 						; итерация по метке lp_add
	jmp str_to_num_end 					; переход на метку str_to_num_end

errors: 							; метка для ошибок
	stc 							; установка флага 'c'
	mov al, 0 						; al = 0

str_to_num_end: 						; метка конца ошибок
	mov sp, bp 						; возврат значения sp
	pop bp 							; возврат bp из стека
	ret 							; выход из процедуры
;-----------------------------------
; Напишите улучшенную процедуру для ввода десятичного числа (от 0 до 255) с консоли. Буфер для ввода строки должен быть локальным, то есть выделяться в стеке при вызове процедуры. Процедура должна вызываться без параметров и возвращать введённое число в регистре AL.
