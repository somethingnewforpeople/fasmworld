use16						; генерированить 16-битный код(для DOS)
org 100h					; начало программы с адресса 100h
;-----------------------------------
	jmp start				; переход на метку start
;-----------------------------------
array dw 1111,-2222,3333,-4444,-12345
length db 5
res db 9 dup(?)
;-----------------------------------
start:						; начало программы
	movzx cx, [length] 			; cx=счетчик для массивов
	xor si, si 				; обнуление si для смещений
	mov bx, 10 				; bx=10 для делений
lp: 						; метка для итераций по массиву
	mov ax, word[array+si] 			; ax=слово array со смещением si
	add si, 2				; увеличение si на 2 для смещений
	call number_to_str 			; вызов процедуры
print_num: 					; метка для вывода числа
	mov dx, res 				; dx=адресс res
	mov ah, 09h 				; ah=функция DOS для вывода строки
	int 21h 				; вызов функции DOS
	push cx					; отправка cx в стек
	push si 				; отправка si в стек
	mov cx, 7 				; cx=7 для очистки res
clear_res: 					; метка для очистки res
	mov si, cx 				; si=cx для смещений
	mov [res+si-1], 0 			; обнуление res со смещением si-1
	loop clear_res 				; итерация по метке clear_res
	pop si 					; возвращение si из стека
	pop cx 					; возвращение cx из стека
	loop lp 				; итерация по метке lp
	jmp exit 				; переход на метку exit


exit: 						; конец программы
	mov ax, 4C00h				; ah - завершение программы DOS, al - код завершения
	int 21h					; вызов функции DOS


number_to_str: 					; метка для конвертирования числа в строку
	push si 				; отправка si в стек
	push cx 				; отправка cx в стек
	xor cx, cx  				; обнуление cx для подсчета цифр
	xor si, si 				; обнуление si для смещений
	cmp ax, 0 				; проверка ax на отрицательное число
	jl negative 				; переход на метку negative если ax отрицательное
	jmp convert 				; переход на метку convert
end_number_to_str:				; метка конца процедуры
	pop dx 					; возврат остатка в dx
	mov [res+si], dl 			; копирование остатка dl в res со смещением si
	inc si 					; увеличение si на 1 для смещений
	loop end_number_to_str 			; итерация по метке end_number_to_str
	mov [res+si], 10 			; копирование 10(новая строка) в res со смещением si
	inc si 					; увеличевание si на 1 для смещений
	mov [res+si], 13 			; копирование 13(возврат каретки) в res со смещением si
	inc si 					; увеличивание si на 1 для смещений
	mov [res+si], "$" 			; копирование '$' в res со смещением si = конец строки
	pop cx 					; возвращение cx из стека
	pop si 					; возвращение si из стека
	ret 					; выход из процедуры


negative: 					; метка для отрицательных чисел
	mov [res], "-" 				; копирование '-' в первый байт res
	inc si 					; увеличиваем si на 1 для смещений
	neg ax 					; превращаем ax в положительное число
	jmp convert 				; переход на метку convert


convert: 					; метка конвертации
	test ax, 0xff 				; проверка ax == 0
	jz end_number_to_str 			; переход на метку end_number_to_str при флаге z == 1
	xor dx, dx 				; обнуление dx для остатков
	div bx 					; dx/bx = ax-результат, dx-остаток
	add dx, "0" 				; конвертируем остаток в строку
	push dx 				; отправка dx в стек
	inc cx 					; увеличение cx на 1 для подсчтеа цифры
	jmp convert 				; переход на метку convert
;-----------------------------------
; Напишите программу для вывода на консоль массива слов со знаком в десятичном виде (например, через запятую).
